input {
    file {
        path => "http.log"
        start_position => "beginning"
    }
}

filter {
    grok {
        match => { "message" => "%{NUMBER:ts}\t%{GREEDYDATA:uid}\t%{IP:id.orig_h}\t%{NUMBER:id.orig_p}\t%{IP:id.resp_h}\t%{NUMBER:id.resp_p}\t%{GREEDYDATA:trans_depth}\t%{GREEDYDATA:method}\t%{GREEDYDATA:server_host}\t%{GREEDYDATA:uri}\t%{GREEDYDATA:referrer}\t%{GREEDYDATA:user_agent}\t%{NUMBER:request_ body_len}\t%{GREEDYDATA:response_ body_len}\t%{GREEDYDATA:status_code}\t%{GREEDYDATA:status_msg}\t%{GREEDYDATA:info_code}\t%{GREEDYDATA:info_msg}\t%{GREEDYDATA:filename}\t%{GREEDYDATA:tags}\t%{GREEDYDATA:username}\t%{GREEDYDATA:pass}\t%{GREEDYDATA:proxied}\t%{GREEDYDATA:orig_fuids}\t%{GREEDYDATA:orig_mime_types}\t%{GREEDYDATA:resp_fuids}\t%{GREEDYDATA:resp_mime_types}" }

        remove_field => ["message", "host", "tags", "path"]
    }

    date {
    	match => ["ts", "UNIX"]
    	target => "@timestamp"
    }
}

output {
    if "_grokparsefailure" in [tags] {
        stdout { codec => rubydebug }
    } else { 
        elasticsearch { index => "http-logs-2012" }
    } 
}
